version: '2.4'
services:
  elasticsearch:
    build: .docker/vue-storefront-api/docker/elasticsearch/
    volumes:
      - >-
        ./.docker/vue-storefront-api/docker/elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
      - ./.docker/api/elasticsearch-healthcheck.sh:/healthcheck.sh
      - 'esdat1:/usr/share/elasticsearch/data'
    ports:
      - '9200:9200'
      - '9300:9300'
    environment:
      ES_JAVA_OPTS: '-Xmx512m -Xms512m'
    healthcheck:
      test: ['CMD', 'sh', '/healthcheck.sh']
  redis:
    image: 'redis:4-alpine'
    ports:
      - '6379:6379'
    volumes:
      - ./.docker/api/redis-healthcheck.sh:/healthcheck.sh
    healthcheck:
      test: ['CMD', 'sh', '/healthcheck.sh']
  storefront-api:
    build:
      context: .docker/vue-storefront-api
      dockerfile: docker/vue-storefront-api/Dockerfile
    env_file: .docker/vue-storefront-api/docker/vue-storefront-api/default.env
    environment:
      VS_ENV: dev
    ports:
      - '8080:8080'
    tmpfs:
      - /var/www/dist
    volumes:
      - './.docker/vue-storefront-api/babel.config.js:/var/www/babel.config.js'
      - './.docker/vue-storefront-api/config:/var/www/config'
      - './.docker/vue-storefront-api/ecosystem.json:/var/www/ecosystem.json'
      - './.docker/vue-storefront-api/migrations:/var/www/migrations:delegated'
      - './.docker/vue-storefront-api/package.json:/var/www/package.json'
      - './.docker/vue-storefront-api/scripts:/var/www/scripts:delegated'
      - './.docker/vue-storefront-api/src:/var/www/src:delegated'
      - './.docker/vue-storefront-api/var:/var/www/var:delegated'
      - './.docker/api/config.json:/var/www/config/local.json'
      - './.docker/api/db.js:/var/www/src/db.js'
      - './.docker/api/package.json:/var/www/src/api/extensions/safira-api/package.json'
      - >-
        ./packages/vsf-storyblok-extension:/var/www/@kodbruket/vsf-storyblok-extension:delegated
    healthcheck:
      test: ['CMD', 'curl', '-f', '-s', '-S', 'http://localhost:8080/api']
  storefront-ui:
    build:
      context: .docker/vue-storefront
      dockerfile: docker/vue-storefront/Dockerfile
    env_file: .docker/vue-storefront/docker/vue-storefront/default.env
    environment:
      VS_ENV: dev
    ports:
      - '3000:3000'
    tmpfs:
      - /var/www/dist
    volumes:
      - './.docker/vue-storefront/babel.config.js:/var/www/babel.config.js'
      - './.docker/vue-storefront/config:/var/www/config'
      - './.docker/vue-storefront/core:/var/www/core:delegated'
      - './.docker/vue-storefront/ecosystem.json:/var/www/ecosystem.json'
      - './.docker/vue-storefront/.eslintignore:/var/www/.eslintignore'
      - './.docker/vue-storefront/.eslintrc.js:/var/www/.eslintrc.js'
      - './.docker/vue-storefront/lerna.json:/var/www/lerna.json'
      - './.docker/vue-storefront/tsconfig.json:/var/www/tsconfig.json'
      - './.docker/vue-storefront/tsconfig-build.json:/var/www/tsconfig-build.json'
      - './.docker/vue-storefront/shims.d.ts:/var/www/shims.d.ts'
      - './.docker/vue-storefront/package.json:/var/www/package.json'
      - './.docker/vue-storefront/src:/var/www/src:delegated'
      - './.docker/vue-storefront/var:/var/www/var:delegated'
      - './.docker/frontend/config.json:/var/www/config/local.json'
      - './.docker/frontend/modules.ts:/var/www/src/modules/index.ts'
      - './theme:/var/www/src/themes/default:delegated'
      - >-
        ./packages/vsf-storyblok-module:/var/www/@kodbruket/vsf-storyblok-module:delegated
    healthcheck:
      test:
        ['CMD', 'wget', '-q', '--tries=1', '--spider', 'http://localhost:3000']
      start_period: 20m
